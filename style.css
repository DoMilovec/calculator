* {
  box-sizing: border-box;
  font-family: Orbitron;
  background-color: rgb(63, 59, 58);
}

body {
  transform: scale(1.1);
  transform-origin: 0 0;
  margin-left: -23px;
  margin-top: -100px;
}

#display,
#selectedOperator {
  border: 1px black solid;
  width: 300px;
  height: 4rem;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 2px;
  padding-right: 25px;
  background: rgba(255, 255, 255, 0.17);
border-radius: 16px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(0px);
-webkit-backdrop-filter: blur(0px);
border: 1px solid rgba(255, 255, 255, 0.99);
margin-top: 5px;
margin-bottom: 5px;
font-size: 24px;
color: #fff;
text-shadow:
  0 0 5px rgb(0, 0, 255),
  0 0 10px #fff,
  0 0 20px #fff,
  0 0 40px rgb(0, 132, 255),
  0 0 80px rgb(0, 132, 255),
  0 0 90px rgb(0, 132, 255),
  0 0 100px rgb(0, 132, 255),
  0 0 150px rgb(0, 132, 255);
}

#plus,
#minus,
#times,
#by,
#equals,
#clear,
#backspace {
  color: white;
  font-size: 24px;
  text-shadow: -1px 1px 0 #000,
               1px 1px 0 #000,
               1px -1px 0 #000,
               -1px -1px 0 #000;
}


html {
  display: flex;
  justify-content: center;
  margin-top: 180px;
  
}
#selectedOperator {
  opacity: 75%;
  font-size: 20px;
}


#container {
  box-shadow: inset 0 3px 6px rgba(0,0,0,0.16), 0 4px 6px rgba(0,0,0,0.45);
  padding: 12px;
  background-color: rgb(132, 135, 136);
  border: 0.35rem solid;
	padding: 1vw;
	border-image: conic-gradient(from var(--angle), var(--c2), var(--c1) 0.1turn, var(--c1) 0.15turn, var(--c2) 0.25turn) 30;
	animation: borderRotate var(--d) linear infinite forwards;
}

.box:nth-child(2) {
	border-image: radial-gradient(ellipse at var(--gradX) var(--gradY), var(--c1), var(--c1) 10%, var(--c2) 40%) 30;
	animation: borderRadial var(--d) linear infinite forwards;
}

@keyframes borderRotate {
	100% {
		--angle: 420deg;
	}
}

@keyframes borderRadial {
	20% {
		--gradX: 100%;
		--gradY: 50%;
	}
	40% {
		--gradX: 100%;
		--gradY: 100%;
	}
	60% {
		--gradX: 50%;
		--gradY: 100%;
	}
	80% {
		--gradX: 0%;
		--gradY: 50%;
	}
	100% {
		--gradX: 50%;
		--gradY: 0%;
	}
}
@property --angle {
  syntax: '<angle>';
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: true;
}
:root {
	--d: 2500ms;
	--angle: 90deg;
	--gradX: 100%;
	--gradY: 50%;
	--c1: rgb(0, 54, 201);
	--c2: rgba(168, 239, 255, 0.1);
}

#main {
  display: flex;
  flex-wrap: wrap;
  width: 300px;
  border-radius: 50%;
  background-color: grey;
}

#main button {
  width: 75px;
}

button#zero,
button#clear {
  width: 150px;
}

#backspace,
#clear {
  align-items: center;
  font-size: 16px;
}




button {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  background-color: #000;
  color: #fff;
  font-size: 18px;
  font-weight: 600;
  letter-spacing: 1px;
  border: 0.5px solid rgba(0, 0, 0, 0.1);
  padding-bottom: 8px;
  height: 65px;
  width: 100px;
  padding: 12px;
  border-radius: 15px 15px 12px 12px;
  cursor: pointer;
  position: relative;
  will-change: transform;
  transition: all .1s ease-in-out 0s;
  user-select: none;
  /* Add gradient shading to each side */
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0)),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
  background-position: bottom right, bottom right;
  background-size: 100% 100%, 100% 100%;
  background-repeat: no-repeat;
  box-shadow: inset -4px -10px 0px rgba(255, 255, 255, 0.4),
    inset -4px -8px 0px rgba(0, 0, 0, 0.3),
    0px 2px 1px rgba(0, 0, 0, 0.3),
    0px 2px 1px rgba(255, 255, 255, 0.1);
  transform: perspective(70px) rotateX(5deg) rotateY(0deg);
}

button span {
  transform: translateY(-10px);
}

button::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(0, 0, 0, 0.13));
  z-index: -1;
  border-radius: 15px;
  box-shadow: inset 4px 0px 0px rgba(255, 255, 255, 0.1),
    inset 4px -8px 0px rgba(0, 0, 0, 0.3);
  transition: all .1s ease-in-out 0s;
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0)),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
  background-position: bottom right, bottom right;
  background-size: 100% 100%, 100% 100%;
  background-repeat: no-repeat;
  z-index: -1;
  border-radius: 15px;
  transition: all .1s ease-in-out 0s;
}

button:active {
  will-change: transform;
  transform: perspective(80px) rotateX(5deg) rotateY(1deg) translateY(3px) scale(0.96);
  height: 64px;
  border: 0.25px solid rgba(0, 0, 0, 0.2);
  box-shadow: inset -4px -8px 0px rgba(255, 255, 255, 0.2),
    inset -4px -6px 0px rgba(0, 0, 0, 0.8),
    0px 1px 0px rgba(0, 0, 0, 0.9),
    0px 1px 0px rgba(255, 255, 255, 0.2);
  transition: all .1s ease-in-out 0s;
}

button::after:active {
  background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0.5), rgba(255, 255, 255, 0.2));
}

button svg {
  width: 15px;
  height: 15px;
}

@keyframes overlay {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

button:focus {
  outline: none;
}


/* ORANGE BUTTONS */
button#by,
button#times,
button#minus,
button#plus {
  /* Add gradient shading to each side */
  background-image: linear-gradient(to right, rgb(0, 0, 0), rgb(0, 0, 0)),
    linear-gradient(to bottom, rgb(255, 166, 0), rgb(255, 166, 0));
  background-position: bottom right, bottom right;
  background-size: 100% 100%, 100% 100%;
  background-repeat: no-repeat;
  box-shadow: inset -4px -10px 0px rgb(255, 166, 0),
    inset -4px -8px 0px rgb(255, 166, 0),
    0px 0px 4px rgb(255, 166, 0),
    0px 0px 4px rgb(255, 166, 0);
}

button#by::after,
button#times::after,
button#minus::after,
button#plus::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(to bottom, rgb(255, 166, 0), rgb(255, 115, 0));
  z-index: -1;
  border-radius: 15px;
  box-shadow: inset 4px 0px 0px rgba(255, 255, 255, 0.1),
    inset 4px -8px 0px rgba(0, 0, 0, 0.3);
  transition: all .1s ease-in-out 0s;
}

/* BLUE BUTTONS*/
button#backspace,
button#clear {
  /* Add gradient shading to each side */
  background-image: linear-gradient(to right, rgb(0, 0, 0), rgb(0, 0, 0)),
    linear-gradient(to bottom, rgb(0, 81, 255), rgb(0, 81, 255));
  background-position: bottom right, bottom right;
  background-size: 100% 100%, 100% 100%;
  background-repeat: no-repeat;
  box-shadow: inset -4px -10px 0px rgb(0, 81, 255),
    inset -4px -8px 0px rgb(0, 81, 255),
    0px 0px 4px rgb(0, 81, 255),
    0px 0px 4px rgb(0, 81, 255);
}

button#backspace::after,
button#clear::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(to bottom, rgb(0, 81, 255), rgb(47, 0, 255));
  z-index: -1;
  border-radius: 15px;
  box-shadow: inset 4px 0px 0px rgba(255, 255, 255, 0.1),
    inset 4px -8px 0px rgba(0, 0, 0, 0.3);
  transition: all .1s ease-in-out 0s;
}

  /* RED BUTTONS*/
  button#equals {
    /* Add gradient shading to each side */
    background-image: linear-gradient(to right, rgb(0, 0, 0), rgb(0, 0, 0)),
      linear-gradient(to bottom, rgb(241, 47, 73), rgb(241, 47, 73));
    background-position: bottom right, bottom right;
    background-size: 100% 100%, 100% 100%;
    background-repeat: no-repeat;
    box-shadow: inset -4px -10px 0px rgb(241, 47, 73),
      inset -4px -8px 0px rgb(241, 47, 73),
      0px 0px 4px rgb(241, 47, 73),
      0px 0px 4px rgb(241, 47, 73);
  }

  button#equals::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-image: linear-gradient(to bottom, rgb(241, 47, 73), rgb(248, 0, 33));
    z-index: -1;
    border-radius: 15px;
    box-shadow: inset 4px 0px 0px rgba(255, 255, 255, 0.1),
      inset 4px -8px 0px rgba(0, 0, 0, 0.3);
    transition: all .1s ease-in-out 0s;
  }